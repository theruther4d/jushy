@import "../variables.scss";

$box_size: 1rem;
$gap: 4px;
$sidebar_width: 80px;
$horizontal_breakpoint: 350px;
$horizontal_max_breakpoint: 449.98px;
$tip_height: 1.5rem;
$tip_offset: 0.5rem;
$box_outline: 2px;

.contributions {
  overflow: unset;
  padding-right: 0;
  max-width: none;

  h3,
  .controls {
    width: 100%;
    max-width: 48rem;
    margin-left: auto;
    margin-right: auto;
    padding-right: 1rem;
  }

  .content {
    display: flex;
    flex-wrap: wrap;
    padding-top: 0.75rem;
    // Prevent outline from being cut off
    padding-bottom: $box_outline;
    order: 1;

    @media all and (min-width: $horizontal_breakpoint) {
      display: grid;
      grid-template-areas:
        ". xAxis ."
        "yAxis body footer";
      max-width: 100%;
      overflow-x: scroll;
      order: 0;
    }
  }

  .label {
    font-size: 0.75rem;
    white-space: nowrap;

    .background {
      background: black;
    }
  }

  header,
  figure {
    display: grid;
    gap: $gap;
    grid-template-columns: repeat(7, 1fr);

    @media all and (min-width: $horizontal_breakpoint) {
      grid-template-columns: unset;
      row-gap: $gap;
    }
  }

  header {
    text-align: center;
    position: sticky;
    top: 0.25rem;
    grid-area: header;
    flex-basis: 100%;
    margin-right: $sidebar_width;

    @media all and (min-width: $horizontal_breakpoint) {
      grid-area: yAxis;
      margin-right: 1rem;
      text-align: right;
      top: unset;
      left: 0;
      display: grid;
      grid-template-rows: repeat(7, $box_size);

      [class^="calendar-day-"] {
        height: $box_size;
      }

      @for $day from 1 through 7 {
        .calendar-day-#{$day - 1} {
          grid-row: $day;
        }
      }
    }
  }

  main {
    flex: 1;

    @media all and (min-width: $horizontal_breakpoint) {
      grid-area: body;
    }
  }

  figure {
    margin: 0;
  }

  aside {
    width: $sidebar_width;
    padding-left: 0.5rem;

    .label,
    .spacer {
      display: flex;
      align-items: center;
      position: sticky;
      top: 0.25rem;
      height: calc(
        (100vw - #{$gutter} - #{$gutter} - #{$sidebar_width} - (#{$gap} * 6)) /
          7
      );
      margin-bottom: $gap;
    }

    .spacer {
      background: transparent;
    }

    .label .background {
      width: 100%;
    }

    @media all and (min-width: $horizontal_breakpoint) {
      grid-area: xAxis;
      width: unset;
      display: flex;
      padding-left: 0;
      gap: $gap;

      .label,
      .spacer {
        height: unset;
        width: $box_size;
        top: unset;
        left: 0;
      }

      .label .background {
        min-width: $box_size * 4;
      }
    }
  }

  footer {
    flex-basis: 100%;
    padding: 1rem 0;

    button {
      white-space: nowrap;
    }

    @media all and (min-width: $horizontal_breakpoint) {
      grid-area: footer;
      display: flex;
      padding: 0 1rem;
    }
  }

  time,
  .placeholder {
    padding-bottom: 100%;
    display: block;
    height: 0;
    position: relative;

    &[data-level="NONE"] {
      background: rgba($primary, 0.09);
    }

    &[data-level="FIRST_QUARTILE"] {
      background: rgba($primary, 0.25);
    }

    &[data-level="SECOND_QUARTILE"] {
      background: rgba($primary, 0.5);
    }

    &[data-level="THIRD_QUARTILE"] {
      background: rgba($primary, 0.75);
    }

    &[data-level="FOURTH_QUARTILE"] {
      background: rgba($primary, 1);
    }

    @media all and (min-width: $horizontal_breakpoint) {
      width: $box_size;
      height: $box_size;
      padding-bottom: 0;
    }
  }

  .placeholder {
    background: transparent !important;
  }

  time {
    &:hover {
      outline: $box_outline solid $secondary;

      &:before {
        content: attr(data-tip);
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        padding: 0.25rem;
        background: $secondary;
        color: black;
        display: flex;
        justify-content: center;
        align-items: center;
        top: calc(-#{$tip_height} - #{$tip_offset});
        z-index: 5;
        height: $tip_height;
        pointer-events: none;
        border-radius: 0.25rem;
        white-space: nowrap;
        font-size: 0.75rem;
        box-shadow: 0 0 4px 4px rgba(0, 0, 0, 0.25),
          0 14px 4px -6px rgba(0, 0, 0, 0.75);
      }
    }
  }

  time,
  .placeholder {
    // left-align first 3 columns when stacked vertically:
    @media all and (max-width: $horizontal_max_breakpoint) {
      &:nth-child(7n + 1),
      &:nth-child(7n + 2),
      &:nth-child(7n + 3) {
        &:hover:before {
          left: 0;
          transform: none;
        }
      }
    }

    // left-align first 3 columns when stacked horizontally:
    @media all and (min-width: $horizontal_breakpoint) {
      @for $day from 1 through 21 {
        &:nth-child(#{$day}):hover:before {
          left: 0;
          transform: none;
        }
      }
    }
  }

  @for $day from 1 through 7 {
    .calendar-day-#{$day - 1} {
      grid-column: $day;

      @media all and (min-width: $horizontal_breakpoint) {
        grid-column: unset;
        grid-row: $day;
      }
    }
  }

  .controls {
    margin-top: 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    color: rgba(white, 0.75);
    fill: rgba(white, 0.75);

    > * {
      margin-top: 1rem;
    }

    .legend {
      width: 120px;
      height: 1rem;
      background-image: linear-gradient(
        to right,
        rgba($primary, 0.05),
        rgba($primary, 1)
      );
      border-radius: 1rem;
      margin-bottom: 1.5rem;
      max-width: 100%;
      position: relative;
      border: 1px solid $primary;
    }

    .scroll {
      display: none;
      order: 1;

      button:first-of-type {
        margin-left: -1rem;
      }

      @media all and (min-width: $horizontal_breakpoint) {
        display: block;
      }
    }

    @media all and (min-width: 740px) {
      margin-top: -1rem;
      justify-content: space-between;

      .legend {
        width: 200px;
        margin-bottom: 0;
      }

      .scroll {
        order: 2;
      }
    }

    figcaption {
      display: flex;
      justify-content: space-between;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      transform: translateY(1.25rem);
      font-size: 0.75rem;
    }

    .meta {
      font-weight: 300;
      order: 2;
      font-size: 0.875rem;
    }

    .scroll {
      flex-shrink: 0;
    }
  }

  .scroll-button {
    border: none;
    background: transparent;

    &:hover {
      background: transparent;
      border: none;
    }

    &:disabled {
      svg {
        fill: rgba(white, 0.25);
      }
    }

    svg {
      width: 2rem;
      height: 2rem;
    }
  }

  .wrap {
    display: flex;
    flex-direction: column;
  }
}
